import os, telebot, tempfile, cv2, win10toast
from PIL import ImageGrab

API_TOKEN = '...' # –≤–º–µ—Å—Ç–æ —Ç–æ—á–µ–∫ –∞–ø–∏ –±–æ—Ç–∞
ALLOWED_USER = [] # –≤ —Å–∫–æ–±–∫–∞—Ö –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π –∞–π–¥–∏
bot = telebot.TeleBot(API_TOKEN)

def photo(id):
    path0 = tempfile.gettempdir() + 'photo.png'
    cap = cv2.VideoCapture(0)
    cap.set(cv2.CAP_PROP_FRAME_WIDTH, 1920)
    cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 1080)
    ret, frame = cap.read()
    frame = cv2.convertScaleAbs(frame, beta=50)
    cv2.imwrite(path0, frame)
    cap.release()
    bot.send_photo(id, open(path0, 'rb'))

bot.send_message(ALLOWED_USER[0], '–ö–æ–º–ø—å—é—Ç–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç')

@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = message.from_user.id
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç")
    markup.add("–í—ã–∫–ª—é—á–∏—Ç—å")
    markup.add("–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å")
    markup.add("–í–µ–±–∫–∞")
    markup.add("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫! :3 üëã', reply_markup=markup)

@bot.message_handler(regexp='–≤—ã–∫–ª—é—á–∏—Ç—å')
def echo_message(message):
    user_id = message.from_user.id
    if user_id in ALLOWED_USER:
        bot.send_message(message.chat.id, '–í—ã–∫–ª—é—á–∞—é...')
        os.system("shutdown -s -t 0")
        pass
    else:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤! –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞ –ø–∏—à–∏—Ç–µ @rikwf')

@bot.message_handler(regexp='–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å')
def echo_message(message):
    user_id = message.from_user.id
    if user_id in ALLOWED_USER:
        bot.send_message(message.chat.id, '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é...')
        os.system("shutdown -r -t 0")
        pass
    else:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤! –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞ –ø–∏—à–∏—Ç–µ @rikwf')

@bot.message_handler(regexp='—Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç')
def echo_message(message):
    user_id = message.from_user.id
    if user_id in ALLOWED_USER:
        path = tempfile.gettempdir() + 'screenshot.png'
        screenshot = ImageGrab.grab(bbox=None, include_layered_windows=False, all_screens=True)
        screenshot.save(path, 'PNG')
        bot.send_photo(message.chat.id, open(path, 'rb'))
        pass
    else:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤! –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞ –ø–∏—à–∏—Ç–µ @rikwf')

@bot.message_handler(regexp='help')
def echo_message(message):
    user_id = message.from_user.id
    if user_id not in ALLOWED_USER:
        bot.send_message(message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–µ–π—á–∞—Å online! –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞ –ø–∏—à–∏—Ç–µ @rikwf')
    else:
        bot.send_message(message.chat.id, 'bot is online')

@bot.message_handler(regexp='–≤–µ–±–∫–∞')
def echo_message(message):
    user_id = message.from_user.id
    if user_id in ALLOWED_USER:
        photo(message.chat.id)
        pass
    else:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤! –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞ –ø–∏—à–∏—Ç–µ @rikwf')

@bot.message_handler(regexp='—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ')
def start_notification(message):
   user_id = message.from_user.id
   if user_id in ALLOWED_USER:
       bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:')
       bot.register_next_step_handler(message, get_notification_text)
   else:
       bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤! –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞ –ø–∏—à–∏—Ç–µ @rikwf')

def get_notification_text(message):
    user_id = message.from_user.id
    if user_id in ALLOWED_USER:
        msg = message.text
        bot.send_message(message.chat.id, f'–í—ã —É–∫–∞–∑–∞–ª–∏ —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {msg}')
        bot.send_message(message.chat.id, '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ?')
        bot.register_next_step_handler(message, send_notification, msg)
    else:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤! –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞ –ø–∏—à–∏—Ç–µ @rikwf')

def send_notification(message, msgu):
    user_id = message.from_user.id
    if user_id in ALLOWED_USER:
        if message.text.lower() == '–¥–∞':
            toast = win10toast.ToastNotifier()
            toast.show_toast(title='–í–ª–∞–¥–µ–ª–µ—Ü –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –≥–æ–≤–æ—Ä–∏—Ç:', msg=msgu, duration=10)
            bot.send_message(message.chat.id, '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.')
        elif message.text.lower() == '–Ω–µ—Ç':
            bot.send_message(message.chat.id, '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.')
        else:
            bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç. –í–≤–µ–¥–∏—Ç–µ "–¥–∞" –∏–ª–∏ "–Ω–µ—Ç".')
            bot.register_next_step_handler(message, send_notification, msgu)
    else:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤! –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞ –ø–∏—à–∏—Ç–µ @rikwf')    

bot.infinity_polling()
