import os, telebot, tempfile, cv2

from PIL import ImageGrab

API_TOKEN = '...' # –≤–º–µ—Å—Ç–æ —Ç–æ—á–µ–∫ –∞–ø–∏ –±–æ—Ç–∞
ALLOWED_USER = [] # –≤ —Å–∫–æ–±–∫–∞—Ö –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π –∞–π–¥–∏
bot = telebot.TeleBot(API_TOKEN)

def photo(id):
    path0 = tempfile.gettempdir() + 'photo.png'
    cap = cv2.VideoCapture(0)
    cap.set(cv2.CAP_PROP_FRAME_WIDTH, 1920)
    cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 1080)
    ret, frame = cap.read()
    flipped_image = cv2.flip(frame, 0)
    frame = cv2.convertScaleAbs(flipped_image, beta=50)
    cv2.imwrite(path0, frame)
    cap.release()
    bot.send_photo(id, open(path0, 'rb'))

bot.send_message(ALLOWED_USER[0], '–ö–æ–º–ø—å—é—Ç–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç')

@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = message.from_user.id
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç")
    markup.add("–í—ã–∫–ª—é—á–∏—Ç—å")
    markup.add("–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å")
    markup.add("–í–µ–±–∫–∞")
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫! :3 üëã', reply_markup=markup)

@bot.message_handler(regexp='–≤—ã–∫–ª—é—á–∏—Ç—å')
def echo_message(message):
    user_id = message.from_user.id
    if user_id in ALLOWED_USER:
        bot.send_message(message.chat.id, '–í—ã–∫–ª—é—á–∞—é...')
        os.system("shutdown -s -t 0")
        pass
    else:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤! –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞ –ø–∏—à–∏—Ç–µ @rikwf')

@bot.message_handler(regexp='–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å')
def echo_message(message):
    user_id = message.from_user.id
    if user_id in ALLOWED_USER:
        bot.send_message(message.chat.id, '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é...')
        os.system("shutdown -r -t 0")
        pass
    else:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤! –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞ –ø–∏—à–∏—Ç–µ @rikwf')

@bot.message_handler(regexp='—Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç')
def echo_message(message):
    user_id = message.from_user.id
    if user_id in ALLOWED_USER:
        path = tempfile.gettempdir() + 'screenshot.png'
        screenshot = ImageGrab.grab(bbox=None, include_layered_windows=False, all_screens=True)
        screenshot.save(path, 'PNG')
        bot.send_photo(message.chat.id, open(path, 'rb'))
        pass
    else:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤! –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞ –ø–∏—à–∏—Ç–µ @rikwf')

@bot.message_handler(regexp='help')
def echo_message(message):
    user_id = message.from_user.id
    if user_id not in ALLOWED_USER:
        bot.send_message(message.chat.id, '–Ø—Ä–∏–∫ —Å–µ–π—á–∞—Å online! –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞ –ø–∏—à–∏—Ç–µ @rikwf')
    else:
        bot.send_message(message.chat.id, 'bot is online')

@bot.message_handler(regexp='–≤–µ–±–∫–∞')
def echo_message(message):
    user_id = message.from_user.id
    if user_id in ALLOWED_USER:
        photo(message.chat.id)
        pass
    else:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤! –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞ –ø–∏—à–∏—Ç–µ @rikwf')

bot.infinity_polling()
